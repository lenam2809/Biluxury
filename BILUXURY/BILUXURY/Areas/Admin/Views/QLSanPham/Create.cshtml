@model BILUXURY.Models.SANPHAM

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LoyoutAdmin.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thêm sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nhà cung cấp", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" onchange="getValue()" id="departmentsDropdownNCC" name="MaNCC"></select>          
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Loại sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" onchange="getValue()" id="departmentsDropdownLSP" name="MaLoaiSP"></select>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Giá", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Chất liệu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChatLieu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChatLieu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Kiểu dáng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KieuDang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KieuDang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="picture" name="LinkAnh" />
                <input type="file" id="fileUpload" accept="image/*" name="fileUpload" value="" style="display: none;" />
                <input type="button" class="btn btn-success" id="btnUpload" value="Chọn ảnh" />
                <br />
                <img id="pictureUpload" width="200" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Khuyến mại", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KhuyenMai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KhuyenMai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input class="form-control" name="SoLuong" style="display: none;" value="0" />
                @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input class="form-control" name="IsDelete" style="display: none;" value="0" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<div>
    <button type="button" title="back" class="btn btn-warning" style="margin-top: 15px;" onclick="location.href='@Url.Action("Index", "QLSanPham")'"><i class="fas fa-backward"></i> Trở về</button>
</div>


@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@section upload {
    @Scripts.Render("~/Asset/Javascript/ScriptUpload.js")
}

@section LoadDataToSelect {
    <script>

        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: "/QLSanPham/getDataLSP",
                data: "{}",
                success: function (data) {
                    var s = '<option value="-1">Chọn loại sản phẩm</option>';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].MaLoaiSP + '">' + data[i].TenLoaiSP + '</option>';
                    }
                    $("#departmentsDropdownLSP").html(s);
                }
            });

            $.ajax({
                type: "GET",
                url: "/QLSanPham/getDataNCC",
                data: "{}",
                success: function (data) {
                    var s = '<option value="-1">Chọn nhà cung cấp</option>';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].MaNCC + '">' + data[i].TenNCC + '</option>';
                    }
                    $("#departmentsDropdownNCC").html(s);
                }
            });   
        });


        function getValue() {
            var myValNCC = $("#departmentsDropdownNCC").val();
        }
        function getValue() {
            var myValLSP = $("#departmentsDropdownLSP").val();
        }
    </script>
}
